using Database.Learning.DbModels;
using Microsoft.EntityFrameworkCore;
using System.Reflection.Metadata;

namespace Database.Learning
{
    public class MyDBContext : DbContext
    {
        public DbSet<Shipper> Shippers { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(
                @"Server=DESKTOP-0B6P97H\SQLEXPRESS;Database=MyTestDB;Trusted_Connection=True;TrustServerCertificate=True;ConnectRetryCount=0");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Shipper>().HasData(new Shipper { ShipperID = 1, ShipperName = "Speedy Express", Phone = "(503) 555-9831" });
            modelBuilder.Entity<Shipper>().HasData(new Shipper { ShipperID = 2, ShipperName = "United Package", Phone = "(503) 555-3199" });
            modelBuilder.Entity<Shipper>().HasData(new Shipper { ShipperID = 3, ShipperName = "Federal Shipping", Phone = "(503) 555-9931" });

            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 1, CategoryName = "Beverages", Description = "Soft drinks, coffees, teas, beers, and ales" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 2, CategoryName = "Condiments", Description = "Sweet and savory sauces, relishes, spreads, and seasonings" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 3, CategoryName = "Confections", Description = "Desserts, candies, and sweet breads" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 4, CategoryName = "Dairy Products", Description = "Cheeses" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 5, CategoryName = "Grains/Cereals", Description = "Breads, crackers, pasta, and cereal" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 6, CategoryName = "Meat/Poultry", Description = "Prepared meats" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 7, CategoryName = "Produce", Description = "Dried fruit and bean curd" });
            modelBuilder.Entity<Category>().HasData(new Category { CategoryID = 8, CategoryName = "Seafood", Description = "Seaweed and fish" });

            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 1, LastName = "Davolio", FirstName = "Nancy", BirthDate = new DateTime(1968, 8, 12), Photo = "EmpID1.pic", Notes = "Education includes a BA in psychology from Colorado State University. She also completed (The Art of the Cold Call). Nancy is a member of 'Toastmasters International'." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 2, LastName = "Fuller", FirstName = "Andrew", BirthDate = new DateTime(1952, 2, 19), Photo = "EmpID2.pic", Notes = "Andrew received his BTS commercial and a Ph.D. in international marketing from the University of Dallas. He is fluent in French and Italian and reads German. He joined the company as a sales representative, was promoted to sales manager and was then named vice president of sales. Andrew is a member of the Sales Management Roundtable, the Seattle Chamber of Commerce, and the Pacific Rim Importers Association." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 3, LastName = "Leverling", FirstName = "Janet", BirthDate = new DateTime(1963, 8, 30), Photo = "EmpID3.pic", Notes = "Janet has a BS degree in chemistry from Boston College). She has also completed a certificate program in food retailing management. Janet was hired as a sales associate and was promoted to sales representative." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 4, LastName = "Peacock", FirstName = "Margaret", BirthDate = new DateTime(1958, 9, 19), Photo = "EmpID4.pic", Notes = "Margaret holds a BA in English literature from Concordia College and an MA from the American Institute of Culinary Arts. She was temporarily assigned to the London office before returning to her permanent post in Seattle." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 5, LastName = "Buchanan", FirstName = "Steven", BirthDate = new DateTime(1955, 3, 4), Photo = "EmpID5.pic", Notes = "Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree. Upon joining the company as a sales representative, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London, where he was promoted to sales manager. Mr. Buchanan has completed the courses 'Successful Telemarketing' and 'International Sales Management'. He is fluent in French." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 6, LastName = "Suyama", FirstName = "Michael", BirthDate = new DateTime(1963, 7, 2), Photo = "EmpID6.pic", Notes = "Michael is a graduate of Sussex University (MA, economics) and the University of California at Los Angeles (MBA, marketing). He has also taken the courses 'Multi-Cultural Selling' and 'Time Management for the Sales Professional'. He is fluent in Japanese and can read and write French, Portuguese, and Spanish." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 7, LastName = "King", FirstName = "Robert", BirthDate = new DateTime(1960, 5, 29), Photo = "EmpID7.pic", Notes = "Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan and then joining the company. After completing a course entitled 'Selling in Europe', he was transferred to the London office." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 8, LastName = "Callahan", FirstName = "Laura", BirthDate = new DateTime(1958, 1, 9), Photo = "EmpID8.pic", Notes = "Laura received a BA in psychology from the University of Washington. She has also completed a course in business French. She reads and writes French." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 9, LastName = "Dodsworth", FirstName = "Anne", BirthDate = new DateTime(1969, 7, 2), Photo = "EmpID9.pic", Notes = "Anne has a BA degree in English from St. Lawrence College. She is fluent in French and German." });
            modelBuilder.Entity<Employee>().HasData(new Employee { EmployeeID = 10, LastName = "West", FirstName = "Adam", BirthDate = new DateTime(1928, 9, 19), Photo = "EmpID10.pic", Notes = "An old chum" });

            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 1, SupplierName = "Exotic Liquid", ContactName = "Charlotte Cooper", Address = "49 Gilbert St.", City = "Londona", PostalCode = "EC1 4SD", Country = "UK", Phone = "(171) 555-2222" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 2, SupplierName = "New Orleans Cajun Delights", ContactName = "Shelley Burke", Address = "P.O. Box 78934", City = "New Orleans", PostalCode = "70117", Country = "USA", Phone = "(100) 555-4822" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 3, SupplierName = "Grandma Kellys Homestead", ContactName = "Regina Murphy", Address = "707 Oxford Rd.", City = "Ann Arbor", PostalCode = "48104", Country = "USA", Phone = "(313) 555-5735" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 4, SupplierName = "Tokyo Traders", ContactName = "Yoshi Nagase", Address = "9-8 Sekimai Musashino-shi", City = "Tokyo", PostalCode = "100", Country = "Japan", Phone = "(03) 3555-5011" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 5, SupplierName = "Cooperativa de Quesos Las Cabras", ContactName = "Antonio del Valle Saavedra ", Address = "Calle del Rosal 4", City = "Oviedo", PostalCode = "33007", Country = "Spain", Phone = "(98) 598 76 54" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 6, SupplierName = "Mayumis", ContactName = "Mayumi Ohno", Address = "92 Setsuko Chuo-ku", City = "Osaka", PostalCode = "545", Country = "Japan", Phone = "(06) 431-7877" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 7, SupplierName = "Pavlova, Ltd.", ContactName = "Ian Devling", Address = "74 Rose St. Moonie Ponds", City = "Melbourne", PostalCode = "3058", Country = "Australia", Phone = "(03) 444-2343" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 8, SupplierName = "Specialty Biscuits, Ltd.", ContactName = "Peter Wilson", Address = "29 Kings Way", City = "Manchester", PostalCode = "M14 GSD", Country = "UK", Phone = "(161) 555-4448" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 9, SupplierName = "PB Knäckebröd AB", ContactName = "Lars Peterson", Address = "Kaloadagatan 13", City = "Göteborg", PostalCode = "S-345 67", Country = "Sweden ", Phone = "031-987 65 43" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 10, SupplierName = "Refrescos Americanas LTDA", ContactName = "Carlos Diaz", Address = "Av. das Americanas 12.890", City = "São Paulo", PostalCode = "5442", Country = "Brazil", Phone = "(11) 555 4640" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 11, SupplierName = "Heli Süßwaren GmbH & Co. KG", ContactName = "Petra Winkler", Address = "Tiergartenstraße 5", City = "Berlin", PostalCode = "10785", Country = "Germany", Phone = "(010) 9984510" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 12, SupplierName = "Plutzer Lebensmittelgroßmärkte AG", ContactName = "Martin Bein", Address = "Bogenallee 51", City = "Frankfurt", PostalCode = "60439", Country = "Germany", Phone = "(069) 992755" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 13, SupplierName = "Nord-Ost-Fisch Handelsgesellschaft mbH", ContactName = "Sven Petersen", Address = "Frahmredder 112a", City = "Cuxhaven", PostalCode = "27478", Country = "Germany", Phone = "(04721) 8713" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 14, SupplierName = "Formaggi Fortini s.r.l.", ContactName = "Elio Rossi", Address = "Viale Dante, 75", City = "Ravenna", PostalCode = "48100", Country = "Italy", Phone = "(0544) 60323" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 15, SupplierName = "Norske Meierier", ContactName = "Beate Vileid", Address = "Hatlevegen 5", City = "Sandvika", PostalCode = "1320", Country = "Norway", Phone = "(0)2-953010" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 16, SupplierName = "Bigfoot Breweries", ContactName = "Cheryl Saylor", Address = "3400 - 8th Avenue Suite 210", City = "Bend", PostalCode = "97101", Country = "USA", Phone = "(503) 555-9931" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 17, SupplierName = "Svensk Sjöföda AB", ContactName = "Michael Björn", Address = "Brovallavägen 231", City = "Stockholm", PostalCode = "S-123 45", Country = "Sweden", Phone = "08-123 45 67" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 18, SupplierName = "Aux joyeux ecclésiastiques", ContactName = "Guylène Nodier", Address = "203, Rue des Francs-Bourgeois", City = "Paris", PostalCode = "75004", Country = "France", Phone = "(1) 03.83.00.68" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 19, SupplierName = "New England Seafood Cannery", ContactName = "Robb Merchant", Address = "Order Processing Dept. 2100 Paul Revere Blvd.", City = "Boston", PostalCode = "02134", Country = "USA", Phone = "(617) 555-3267" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 20, SupplierName = "Leka Trading", ContactName = "Chandra Leka", Address = "471 Serangoon Loop, Suite #402", City = "Singapore", PostalCode = "0512", Country = "Singapore", Phone = "555-8787" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 21, SupplierName = "Lyngbysild", ContactName = "Niels Petersen", Address = "Lyngbysild Fiskebakken 10", City = "Lyngby", PostalCode = "2800", Country = "Denmark", Phone = "43844108" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 22, SupplierName = "Zaanse Snoepfabriek", ContactName = "Dirk Luchte", Address = "Verkoop Rijnweg 22", City = "Zaandam", PostalCode = "9999 ZZ", Country = "Netherlands", Phone = "(12345) 1212" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 23, SupplierName = "Karkki Oy", ContactName = "Anne Heikkonen", Address = "Valtakatu 12", City = "Lappeenranta", PostalCode = "53120", Country = "Finland", Phone = "(953) 10956" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 24, SupplierName = "Gday, Mate", ContactName = "Wendy Mackenzie", Address = "170 Prince Edward Parade Hunters Hill", City = "Sydney", PostalCode = "2042", Country = "Australia", Phone = "(02) 555-5914" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 25, SupplierName = "Ma Maison", ContactName = "Jean-Guy Lauzon", Address = "2960 Rue St. Laurent", City = "Montréal", PostalCode = "H1J 1C3", Country = "Canada", Phone = "(514) 555-9022" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 26, SupplierName = "Pasta Buttini s.r.l.", ContactName = "Giovanni Giudici", Address = "Via dei Gelsomini, 153", City = "Salerno", PostalCode = "84100", Country = "Italy", Phone = "(089) 6547665" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 27, SupplierName = "Escargots Nouveaux", ContactName = "Marie Delamare", Address = "22, rue H. Voiron", City = "Montceau", PostalCode = "71300", Country = "France", Phone = "85.57.00.07" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 28, SupplierName = "Gai pâturage", ContactName = "Eliane Noz", Address = "Bat. B 3, rue des Alpes", City = "Annecy", PostalCode = "74000", Country = "France", Phone = "38.76.98.06" });
            modelBuilder.Entity<Supplier>().HasData(new Supplier { SupplierID = 29, SupplierName = "Forêts dérables", ContactName = "Chantal Goulet", Address = "148 rue Chasseur", City = "Ste-Hyacinthe", PostalCode = "J2S 7S8", Country = "Canada", Phone = "(514) 555-2955" });

            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 1, CustomerName = "Alfreds Futterkiste", ContactName = "Maria Anders", Address = "Obere Str. 57", City = "Berlin", PostalCode = "12209", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 2, CustomerName = "Ana Trujillo Emparedados y helados", ContactName = "Ana Trujillo", Address = "Avda. de la Constitución 2222", City = "México D.F.", PostalCode = "05021", Country = "Mexico" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 3, CustomerName = "Antonio Moreno Taquería", ContactName = "Antonio Moreno", Address = "Mataderos 2312", City = "México D.F.", PostalCode = "05023", Country = "Mexico" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 4, CustomerName = "Around the Horn", ContactName = "Thomas Hardy", Address = "120 Hanover Sq.", City = "London", PostalCode = "WA1 1DP", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 5, CustomerName = "Berglunds snabbköp", ContactName = "Christina Berglund", Address = "Berguvsvägen 8", City = "Luleå", PostalCode = "S-958 22", Country = "Sweden" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 6, CustomerName = "Blauer See Delikatessen", ContactName = "Hanna Moos", Address = "Forsterstr. 57", City = "Mannheim", PostalCode = "68306", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 7, CustomerName = "Blondel père et fils", ContactName = "Frédérique Citeaux", Address = "24, place Kléber", City = "Strasbourg", PostalCode = "67000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 8, CustomerName = "Bólido Comidas preparadas", ContactName = "Martín Sommer", Address = "C/ Araquil, 67", City = "Madrid", PostalCode = "28023", Country = "Spain" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 9, CustomerName = "Bon app", ContactName = "Laurence Lebihans", Address = "12, rue des Bouchers", City = "Marseille", PostalCode = "13008", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 10, CustomerName = "Bottom-Dollar Marketse", ContactName = "Elizabeth Lincoln", Address = "23 Tsawassen Blvd.", City = "Tsawassen", PostalCode = "T2F 8M4", Country = "Canada" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 11, CustomerName = "Bs Beverages", ContactName = "Victoria Ashworth", Address = "Fauntleroy Circus", City = "London", PostalCode = "EC2 5NT", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 12, CustomerName = "Cactus Comidas para llevar", ContactName = "Patricio Simpson", Address = "Cerrito 333", City = "Buenos Aires", PostalCode = "1010", Country = "Argentina" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 13, CustomerName = "Centro comercial Moctezuma", ContactName = "Francisco Chang", Address = "Sierras de Granada 9993", City = "México D.F.", PostalCode = "05022", Country = "Mexico" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 14, CustomerName = "Chop-suey Chinese", ContactName = "Yang Wang", Address = "Hauptstr. 29", City = "Bern", PostalCode = "3012", Country = "Switzerland" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 15, CustomerName = "Comércio Mineiro", ContactName = "Pedro Afonso", Address = "Av. dos Lusíadas, 23", City = "São Paulo", PostalCode = "05432-043", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 16, CustomerName = "Consolidated Holdings", ContactName = "Elizabeth Brown", Address = "Berkeley Gardens 12 Brewery ", City = "London", PostalCode = "WX1 6LT", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 17, CustomerName = "Drachenblut Delikatessend", ContactName = "Sven Ottlieb", Address = "Walserweg 21", City = "Aachen", PostalCode = "52066", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 18, CustomerName = "Du monde entier", ContactName = "Janine Labrune", Address = "67, rue des Cinquante Otages", City = "Nantes", PostalCode = "44000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 19, CustomerName = "Eastern Connection", ContactName = "Ann Devon", Address = "35 King George", City = "London", PostalCode = "WX3 6FW", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 20, CustomerName = "Ernst Handel", ContactName = "Roland Mendel", Address = "Kirchgasse 6", City = "Graz", PostalCode = "8010", Country = "Austria" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 21, CustomerName = "Familia Arquibaldo", ContactName = "Aria Cruz", Address = "Rua Orós, 92", City = "São Paulo", PostalCode = "05442-030", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 22, CustomerName = "FISSA Fabrica Inter. Salchichas S.A.", ContactName = "Diego Roel", Address = "C/ Moralzarzal, 86", City = "Madrid", PostalCode = "28034", Country = "Spain" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 23, CustomerName = "Folies gourmandes", ContactName = "Martine Rancé", Address = "184, chaussée de Tournai", City = "Lille", PostalCode = "59000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 24, CustomerName = "Folk och fä HB", ContactName = "Maria Larsson", Address = "Åkergatan 24", City = "Bräcke", PostalCode = "S-844 67", Country = "Sweden" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 25, CustomerName = "Frankenversand", ContactName = "Peter Franken", Address = "Berliner Platz 43", City = "München", PostalCode = "80805", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 26, CustomerName = "France restauration", ContactName = "Carine Schmitt", Address = "54, rue Royale", City = "Nantes", PostalCode = "44000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 27, CustomerName = "Franchi S.p.A.", ContactName = "Paolo Accorti", Address = "Via Monte Bianco 34", City = "Torino", PostalCode = "10100", Country = "Italy" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 28, CustomerName = "Furia Bacalhau e Frutos do Mar", ContactName = "Lino Rodriguez ", Address = "Jardim das rosas n. 32", City = "Lisboa", PostalCode = "1675", Country = "Portugal" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 29, CustomerName = "Galería del gastrónomo", ContactName = "Eduardo Saavedra", Address = "Rambla de Cataluña, 23", City = "Barcelona", PostalCode = "08022", Country = "Spain" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 30, CustomerName = "Godos Cocina Típica", ContactName = "José Pedro Freyre", Address = "C/ Romero, 33", City = "Sevilla", PostalCode = "41101", Country = "Spain" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 31, CustomerName = "Gourmet Lanchonetes", ContactName = "André Fonseca", Address = "Av. Brasil, 442", City = "Campinas", PostalCode = "04876-786", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 32, CustomerName = "Great Lakes Food Market", ContactName = "Howard Snyder", Address = "2732 Baker Blvd.", City = "Eugene", PostalCode = "97403", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 33, CustomerName = "GROSELLA-Restaurante", ContactName = "Manuel Pereira", Address = "5ª Ave. Los Palos Grandes", City = "Caracas", PostalCode = "1081", Country = "Venezuela" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 34, CustomerName = "Hanari Carnes", ContactName = "Mario Pontes", Address = "Rua do Paço, 67", City = "Rio de Janeiro", PostalCode = "05454-876", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 35, CustomerName = "HILARIÓN-Abastos", ContactName = "Carlos Hernández", Address = "Carrera 22 con Ave. Carlos Soublette #8-35", City = "San Cristóbal", PostalCode = "5022", Country = "Venezuela" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 36, CustomerName = "Hungry Coyote Import Store", ContactName = "Yoshi Latimer", Address = "City Center Plaza 516 Main St.", City = "Elgin", PostalCode = "97827", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 37, CustomerName = "Hungry Owl All-Night Grocers", ContactName = "Patricia McKenna", Address = "8 Johnstown Road", City = "Cork", PostalCode = "", Country = "Ireland" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 38, CustomerName = "Island Trading", ContactName = "Helen Bennett", Address = "Garden House Crowther Way", City = "Cowes", PostalCode = "PO31 7PJ", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 39, CustomerName = "Königlich Essen", ContactName = "Philip Cramer", Address = "Maubelstr. 90", City = "Brandenburg", PostalCode = "14776", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 40, CustomerName = "La corne dabondance", ContactName = "Daniel Tonini", Address = "67, avenue de lEurope", City = "Versailles", PostalCode = "78000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 41, CustomerName = "La maison dAsie", ContactName = "Annette Roulet", Address = "1 rue Alsace-Lorraine", City = "Toulouse", PostalCode = "31000", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 42, CustomerName = "Laughing Bacchus Wine Cellars", ContactName = "Yoshi Tannamuri", Address = "1900 Oak St.", City = "Vancouver", PostalCode = "V3F 2K1", Country = "Canada" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 43, CustomerName = "Lazy K Kountry Store", ContactName = "John Steel", Address = "12 Orchestra Terrace", City = "Walla Walla", PostalCode = "99362", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 44, CustomerName = "Lehmanns Marktstand", ContactName = "Renate Messner", Address = "Magazinweg 7", City = "Frankfurt a.M. ", PostalCode = "60528", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 45, CustomerName = "Lets Stop N Shop", ContactName = "Jaime Yorres", Address = "87 Polk St. Suite 5", City = "San Francisco", PostalCode = "94117", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 46, CustomerName = "LILA-Supermercado", ContactName = "Carlos González", Address = "Carrera 52 con Ave. Bolívar #65-98 Llano Largo", City = "Barquisimeto", PostalCode = "3508", Country = "Venezuela" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 47, CustomerName = "LINO-Delicateses", ContactName = "Felipe Izquierdo", Address = "Ave. 5 de Mayo Porlamar", City = "I. de Margarita", PostalCode = "4980", Country = "Venezuela" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 48, CustomerName = "Lonesome Pine Restaurant", ContactName = "Fran Wilson", Address = "89 Chiaroscuro Rd.", City = "Portland", PostalCode = "97219", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 49, CustomerName = "Magazzini Alimentari Riuniti", ContactName = "Giovanni Rovelli", Address = "Via Ludovico il Moro 22", City = "Bergamo", PostalCode = "24100", Country = "Italy" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 50, CustomerName = "Maison Dewey", ContactName = "Catherine Dewey", Address = "Rue Joseph-Bens 532", City = "Bruxelles", PostalCode = "B-1180", Country = "Belgium" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 51, CustomerName = "Mère Paillarde", ContactName = "Jean Fresnière", Address = "43 rue St. Laurent", City = "Montréal", PostalCode = "H1J 1C3", Country = "Canada" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 52, CustomerName = "Morgenstern Gesundkost", ContactName = "Alexander Feuer", Address = "Heerstr. 22", City = "Leipzig", PostalCode = "04179", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 53, CustomerName = "North/South", ContactName = "Simon Crowther", Address = "South House 300 Queensbridge", City = "London", PostalCode = "SW7 1RZ", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 54, CustomerName = "Océano Atlántico Ltda.", ContactName = "Yvonne Moncada", Address = "Ing. Gustavo Moncada 8585 Piso 20-A", City = "Buenos Aires", PostalCode = "1010", Country = "Argentina" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 55, CustomerName = "Old World Delicatessen", ContactName = "Rene Phillips", Address = "2743 Bering St.", City = "Anchorage", PostalCode = "99508", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 56, CustomerName = "Ottilies Käseladen", ContactName = "Henriette Pfalzheim", Address = "Mehrheimerstr. 369", City = "Köln", PostalCode = "50739", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 57, CustomerName = "Paris spécialités", ContactName = "Marie Bertrand", Address = "265, boulevard Charonne", City = "Paris", PostalCode = "75012", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 58, CustomerName = "Pericles Comidas clásicas", ContactName = "Guillermo Fernández", Address = "Calle Dr. Jorge Cash 321", City = "México D.F.", PostalCode = "05033", Country = "Mexico" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 59, CustomerName = "Piccolo und mehr", ContactName = "Georg Pipps", Address = "Geislweg 14", City = "Salzburg", PostalCode = "5020", Country = "Austria" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 60, CustomerName = "Princesa Isabel Vinhoss", ContactName = "Isabel de Castro", Address = "Estrada da saúde n. 58", City = "Lisboa", PostalCode = "1756", Country = "Portugal" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 61, CustomerName = "Que Delícia", ContactName = "Bernardo Batista", Address = "Rua da Panificadora, 12", City = "Rio de Janeiro", PostalCode = "02389-673", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 62, CustomerName = "Queen Cozinha", ContactName = "Lúcia Carvalho", Address = "Alameda dos Canàrios, 891", City = "São Paulo", PostalCode = "05487-020", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 63, CustomerName = "QUICK-Stop", ContactName = "Horst Kloss", Address = "Taucherstraße 10", City = "Cunewalde", PostalCode = "01307", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 64, CustomerName = "Rancho grande", ContactName = "Sergio Gutiérrez", Address = "Av. del Libertador 900", City = "Buenos Aires", PostalCode = "1010", Country = "Argentina" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 65, CustomerName = "Rattlesnake Canyon Grocery", ContactName = "Paula Wilson", Address = "2817 Milton Dr.", City = "Albuquerque", PostalCode = "87110", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 66, CustomerName = "Reggiani Caseifici", ContactName = "Maurizio Moroni", Address = "Strada Provinciale 124", City = "Reggio Emilia", PostalCode = "42100", Country = "Italy" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 67, CustomerName = "Ricardo Adocicados", ContactName = "Janete Limeira", Address = "Av. Copacabana, 267", City = "Rio de Janeiro", PostalCode = "02389-890", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 68, CustomerName = "Richter Supermarkt", ContactName = "Michael Holz", Address = "Grenzacherweg 237", City = "Genève", PostalCode = "1203", Country = "Switzerland" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 69, CustomerName = "Romero y tomillo", ContactName = "Alejandra Camino", Address = "Gran Vía, 1", City = "Madrid", PostalCode = "28001", Country = "Spain" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 70, CustomerName = "Santé Gourmet", ContactName = "Jonas Bergulfsen", Address = "Erling Skakkes gate 78", City = "Stavern", PostalCode = "4110", Country = "Norway" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 71, CustomerName = "Save-a-lot Markets", ContactName = "Jose Pavarotti", Address = "187 Suffolk Ln.", City = "Boise", PostalCode = "83720", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 72, CustomerName = "Seven Seas Imports", ContactName = "Hari Kumar", Address = "90 Wadhurst Rd.", City = "London", PostalCode = "OX15 4NB", Country = "UK" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 73, CustomerName = "Simons bistro", ContactName = "Jytte Petersen", Address = "Vinbæltet 34", City = "København", PostalCode = "1734", Country = "Denmark" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 74, CustomerName = "Spécialités du monde", ContactName = "Dominique Perrier", Address = "25, rue Lauriston", City = "Paris", PostalCode = "75016", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 75, CustomerName = "Split Rail Beer & Ale", ContactName = "Art Braunschweiger", Address = "P.O. Box 555", City = "Lander", PostalCode = "82520", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 76, CustomerName = "Suprêmes délices", ContactName = "Pascale Cartrain", Address = "Boulevard Tirou, 255", City = "Charleroi", PostalCode = "B-6000", Country = "Belgium" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 77, CustomerName = "The Big Cheese", ContactName = "Liz Nixon", Address = "89 Jefferson Way Suite 2", City = "Portland", PostalCode = "97201", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 78, CustomerName = "The Cracker Box", ContactName = "Liu Wong", Address = "55 Grizzly Peak Rd.", City = "Butte", PostalCode = "59801", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 79, CustomerName = "Toms Spezialitäten", ContactName = "Karin Josephs", Address = "Luisenstr. 48", City = "Münster", PostalCode = "44087", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 80, CustomerName = "Tortuga Restaurante", ContactName = "Miguel Angel Paolino", Address = "Avda. Azteca 123", City = "México D.F.", PostalCode = "05033", Country = "Mexico" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 81, CustomerName = "Tradição Hipermercados", ContactName = "Anabela Domingues", Address = "Av. Inês de Castro, 414", City = "São Paulo", PostalCode = "05634-030", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 82, CustomerName = "Trails Head Gourmet Provisioners", ContactName = "Helvetius Nagy", Address = "722 DaVinci Blvd.", City = "Kirkland", PostalCode = "98034", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 83, CustomerName = "Vaffeljernet", ContactName = "Palle Ibsen", Address = "Smagsløget 45", City = "Århus", PostalCode = "8200", Country = "Denmark" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 84, CustomerName = "Victuailles en stock", ContactName = "Mary Saveley", Address = "2, rue du Commerce", City = "Lyon", PostalCode = "69004", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 85, CustomerName = "Vins et alcools Chevalier", ContactName = "Paul Henriot", Address = "59 rue de lAbbaye", City = "Reims", PostalCode = "51100", Country = "France" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 86, CustomerName = "Die Wandernde Kuh", ContactName = "Rita Müller", Address = "Adenauerallee 900", City = "Stuttgart", PostalCode = "70563", Country = "Germany" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 87, CustomerName = "Wartian Herkku", ContactName = "Pirkko Koskitalo", Address = "Torikatu 38", City = "Oulu", PostalCode = "90110", Country = "Finland" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 88, CustomerName = "Wellington Importadora", ContactName = "Paula Parente", Address = "Rua do Mercado, 12", City = "Resende", PostalCode = "08737-363", Country = "Brazil" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 89, CustomerName = "White Clover Markets", ContactName = "Karl Jablonski", Address = "305 - 14th Ave. S. Suite 3B", City = "Seattle", PostalCode = "98128", Country = "USA" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 90, CustomerName = "Wilman Kala", ContactName = "Matti Karttunen", Address = "Keskuskatu 45", City = "Helsinki", PostalCode = "21240", Country = "Finland" });
            modelBuilder.Entity<Customer>().HasData(new Customer { CustomerID = 91, CustomerName = "Wolski", ContactName = "Zbyszek", Address = "ul. Filtrowa 68", City = "Walla", PostalCode = "01-012", Country = "Poland" });

            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 1, ProductName = "Chais", SupplierID = 1, CategoryID = 1, Unit = "10 boxes x 20 bags", Price = 18.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 2, ProductName = "Chang", SupplierID = 1, CategoryID = 1, Unit = "24 - 12 oz bottles", Price = 19.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 3, ProductName = "Aniseed Syrup", SupplierID = 1, CategoryID = 2, Unit = "12 - 550 ml bottles", Price = 10.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 4, ProductName = "Chef Antons Cajun Seasoning", SupplierID = 2, CategoryID = 2, Unit = "48 - 6 oz jars", Price = 22.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 5, ProductName = "Chef Antons Gumbo Mix", SupplierID = 2, CategoryID = 2, Unit = "36 boxes", Price = 21.35 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 6, ProductName = "Grandmas Boysenberry Spread", SupplierID = 3, CategoryID = 2, Unit = "12 - 8 oz jars", Price = 25.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 7, ProductName = "Uncle Bobs Organic Dried Pears", SupplierID = 3, CategoryID = 7, Unit = "12 - 1 lb pkgs.", Price = 30.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 8, ProductName = "Northwoods Cranberry Sauce", SupplierID = 3, CategoryID = 2, Unit = "12 - 12 oz jars", Price = 40.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 9, ProductName = "Mishi Kobe Niku", SupplierID = 4, CategoryID = 6, Unit = "18 - 500 g pkgs.", Price = 97.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 10, ProductName = "Ikura", SupplierID = 4, CategoryID = 8, Unit = "12 - 200 ml jars", Price = 31.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 11, ProductName = "Queso Cabrales", SupplierID = 5, CategoryID = 4, Unit = "1 kg pkg.", Price = 21.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 12, ProductName = "Queso Manchego La Pastora", SupplierID = 5, CategoryID = 4, Unit = "10 - 500 g pkgs.", Price = 38.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 13, ProductName = "Konbu", SupplierID = 6, CategoryID = 8, Unit = "2 kg box", Price = 6.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 14, ProductName = "Tofu", SupplierID = 6, CategoryID = 7, Unit = "40 - 100 g pkgs.", Price = 23.25 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 15, ProductName = "Genen Shouyu", SupplierID = 6, CategoryID = 2, Unit = "24 - 250 ml bottles", Price = 15.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 16, ProductName = "Pavlova", SupplierID = 7, CategoryID = 3, Unit = "32 - 500 g boxes", Price = 17.45 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 17, ProductName = "Alice Mutton", SupplierID = 7, CategoryID = 6, Unit = "20 - 1 kg tins", Price = 39.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 18, ProductName = "Carnarvon Tigers", SupplierID = 7, CategoryID = 8, Unit = "16 kg pkg.", Price = 62.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 19, ProductName = "Teatime Chocolate Biscuits", SupplierID = 8, CategoryID = 3, Unit = "10 boxes x 12 pieces", Price = 9.20 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 20, ProductName = "Sir Rodneys Marmalade", SupplierID = 8, CategoryID = 3, Unit = "30 gift boxes", Price = 81.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 21, ProductName = "Sir Rodneys Scones", SupplierID = 8, CategoryID = 3, Unit = "24 pkgs. x 4 pieces", Price = 10.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 22, ProductName = "Gustafs Knäckebröd", SupplierID = 9, CategoryID = 5, Unit = "24 - 500 g pkgs.", Price = 21.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 23, ProductName = "Tunnbröd", SupplierID = 9, CategoryID = 5, Unit = "12 - 250 g pkgs.", Price = 9.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 24, ProductName = "Guaraná Fantástica", SupplierID = 10, CategoryID = 1, Unit = "12 - 355 ml cans", Price = 4.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 25, ProductName = "NuNuCa Nuß-Nougat-Creme", SupplierID = 11, CategoryID = 3, Unit = "20 - 450 g glasses", Price = 14.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 26, ProductName = "Gumbär Gummibärchen", SupplierID = 11, CategoryID = 3, Unit = "100 - 250 g bags", Price = 31.23 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 27, ProductName = "Schoggi Schokolade", SupplierID = 11, CategoryID = 3, Unit = "100 - 100 g pieces", Price = 43.90 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 28, ProductName = "Rössle Sauerkraut", SupplierID = 12, CategoryID = 7, Unit = "25 - 825 g cans", Price = 45.60 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 29, ProductName = "Thüringer Rostbratwurst", SupplierID = 12, CategoryID = 6, Unit = "50 bags x 30 sausgs.", Price = 123.79 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 30, ProductName = "Nord-Ost Matjeshering", SupplierID = 13, CategoryID = 8, Unit = "10 - 200 g glasses", Price = 25.89 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 31, ProductName = "Gorgonzola Telino", SupplierID = 14, CategoryID = 4, Unit = "12 - 100 g pkgs", Price = 12.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 32, ProductName = "Mascarpone Fabioli", SupplierID = 14, CategoryID = 4, Unit = "24 - 200 g pkgs.", Price = 32.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 33, ProductName = "Geitost", SupplierID = 15, CategoryID = 4, Unit = "500 g", Price = 2.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 34, ProductName = "Sasquatch Ale", SupplierID = 16, CategoryID = 1, Unit = "24 - 12 oz bottles", Price = 14.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 35, ProductName = "Steeleye Stout", SupplierID = 16, CategoryID = 1, Unit = "24 - 12 oz bottles", Price = 18.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 36, ProductName = "Inlagd Sill", SupplierID = 17, CategoryID = 8, Unit = "24 - 250 g jars", Price = 19.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 37, ProductName = "Gravad lax", SupplierID = 17, CategoryID = 8, Unit = "12 - 500 g pkgs.", Price = 26.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 38, ProductName = "Côte de Blaye", SupplierID = 18, CategoryID = 1, Unit = "12 - 75 cl bottles", Price = 263.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 39, ProductName = "Chartreuse verte", SupplierID = 18, CategoryID = 1, Unit = "750 cc per bottle", Price = 18.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 40, ProductName = "Boston Crab Meat", SupplierID = 19, CategoryID = 8, Unit = "24 - 4 oz tins", Price = 18.40 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 41, ProductName = "Jacks New England Clam Chowder", SupplierID = 19, CategoryID = 8, Unit = "12 - 12 oz cans", Price = 9.65 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 42, ProductName = "Singaporean Hokkien Fried Mee", SupplierID = 20, CategoryID = 5, Unit = "32 - 1 kg pkgs.", Price = 14.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 43, ProductName = "Ipoh Coffee", SupplierID = 20, CategoryID = 1, Unit = "16 - 500 g tins", Price = 46.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 44, ProductName = "Gula Malacca", SupplierID = 20, CategoryID = 2, Unit = "20 - 2 kg bags", Price = 19.45 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 45, ProductName = "Røgede sild", SupplierID = 21, CategoryID = 8, Unit = "1k pkg.", Price = 9.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 46, ProductName = "Spegesild", SupplierID = 21, CategoryID = 8, Unit = "4 - 450 g glasses", Price = 12.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 47, ProductName = "Zaanse koeken", SupplierID = 22, CategoryID = 3, Unit = "10 - 4 oz boxes", Price = 9.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 48, ProductName = "Chocolade", SupplierID = 22, CategoryID = 3, Unit = "10 pkgs.", Price = 12.75 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 49, ProductName = "Maxilaku", SupplierID = 23, CategoryID = 3, Unit = "24 - 50 g pkgs.", Price = 20.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 50, ProductName = "Valkoinen suklaa", SupplierID = 23, CategoryID = 3, Unit = "12 - 100 g bars", Price = 16.25 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 51, ProductName = "Manjimup Dried Apples", SupplierID = 24, CategoryID = 7, Unit = "50 - 300 g pkgs.", Price = 53.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 52, ProductName = "Filo Mix", SupplierID = 24, CategoryID = 5, Unit = "16 - 2 kg boxes", Price = 7.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 53, ProductName = "Perth Pasties", SupplierID = 24, CategoryID = 6, Unit = "48 pieces", Price = 32.80 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 54, ProductName = "Tourtière", SupplierID = 25, CategoryID = 6, Unit = "16 pies", Price = 7.45 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 55, ProductName = "Pâté chinois", SupplierID = 25, CategoryID = 6, Unit = "24 boxes x 2 pies", Price = 24.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 56, ProductName = "Gnocchi di nonna Alice", SupplierID = 26, CategoryID = 5, Unit = "24 - 250 g pkgs.", Price = 38.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 57, ProductName = "Ravioli Angelo", SupplierID = 26, CategoryID = 5, Unit = "24 - 250 g pkgs.", Price = 19.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 58, ProductName = "Escargots de Bourgogne", SupplierID = 27, CategoryID = 8, Unit = "24 pieces", Price = 13.25 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 59, ProductName = "Raclette Courdavault", SupplierID = 28, CategoryID = 4, Unit = "5 kg pkg.", Price = 55.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 60, ProductName = "Camembert Pierrot", SupplierID = 28, CategoryID = 4, Unit = "15 - 300 g rounds", Price = 34.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 61, ProductName = "Sirop dérable", SupplierID = 29, CategoryID = 2, Unit = "24 - 500 ml bottles", Price = 28.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 62, ProductName = "Tarte au sucre", SupplierID = 29, CategoryID = 3, Unit = "48 pies", Price = 49.30 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 63, ProductName = "Vegie-spread", SupplierID = 7, CategoryID = 2, Unit = "15 - 625 g jars", Price = 43.90 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 64, ProductName = "Wimmers gute Semmelknödel", SupplierID = 12, CategoryID = 5, Unit = "20 bags x 4 pieces", Price = 33.25 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 65, ProductName = "Louisiana Fiery Hot Pepper Sauce", SupplierID = 2, CategoryID = 2, Unit = "32 - 8 oz bottles", Price = 21.05 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 66, ProductName = "Louisiana Hot Spiced Okra", SupplierID = 2, CategoryID = 2, Unit = "24 - 8 oz jars", Price = 17.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 67, ProductName = "Laughing Lumberjack Lager", SupplierID = 16, CategoryID = 1, Unit = "24 - 12 oz bottles", Price = 14.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 68, ProductName = "Scottish Longbreads", SupplierID = 8, CategoryID = 3, Unit = "10 boxes x 8 pieces", Price = 12.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 69, ProductName = "Gudbrandsdalsost", SupplierID = 15, CategoryID = 4, Unit = "10 kg pkg.", Price = 36.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 70, ProductName = "Outback Lager", SupplierID = 7, CategoryID = 1, Unit = "24 - 355 ml bottles", Price = 15.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 71, ProductName = "Fløtemysost", SupplierID = 15, CategoryID = 4, Unit = "10 - 500 g pkgs.", Price = 21.50 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 72, ProductName = "Mozzarella di Giovanni", SupplierID = 14, CategoryID = 4, Unit = "24 - 200 g pkgs.", Price = 34.80 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 73, ProductName = "Röd Kaviar", SupplierID = 17, CategoryID = 8, Unit = "24 - 150 g jars", Price = 15.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 74, ProductName = "Longlife Tofu", SupplierID = 4, CategoryID = 7, Unit = "5 kg pkg.", Price = 10.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 75, ProductName = "Rhönbräu Klosterbier", SupplierID = 12, CategoryID = 1, Unit = "24 - 0.5 l bottles", Price = 7.75 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 76, ProductName = "Lakkalikööri", SupplierID = 23, CategoryID = 1, Unit = "500 ml ", Price = 18.00 });
            modelBuilder.Entity<Product>().HasData(new Product { ProductID = 77, ProductName = "Original Frankfurter grüne Soße", SupplierID = 12, CategoryID = 2, Unit = "12 boxes", Price = 13.00 });

            var rand = new Random();
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10248, CustomerID = 90, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10249, CustomerID = 81, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10250, CustomerID = 34, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10251, CustomerID = 84, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10252, CustomerID = 76, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10253, CustomerID = 34, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10254, CustomerID = 14, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10255, CustomerID = 68, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10256, CustomerID = 88, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10257, CustomerID = 35, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10258, CustomerID = 20, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10259, CustomerID = 13, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10260, CustomerID = 55, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10261, CustomerID = 61, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10262, CustomerID = 65, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10263, CustomerID = 20, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10264, CustomerID = 24, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10265, CustomerID = 7, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10266, CustomerID = 87, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10267, CustomerID = 25, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10268, CustomerID = 33, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10269, CustomerID = 89, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10270, CustomerID = 87, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10271, CustomerID = 75, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10272, CustomerID = 65, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10273, CustomerID = 63, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10274, CustomerID = 85, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10275, CustomerID = 49, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10276, CustomerID = 80, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10277, CustomerID = 52, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10278, CustomerID = 5, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10279, CustomerID = 44, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10280, CustomerID = 5, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10281, CustomerID = 69, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10282, CustomerID = 69, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10283, CustomerID = 46, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10284, CustomerID = 44, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10285, CustomerID = 63, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10286, CustomerID = 63, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10287, CustomerID = 67, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10288, CustomerID = 66, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10289, CustomerID = 11, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10290, CustomerID = 15, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10291, CustomerID = 61, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10292, CustomerID = 81, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10293, CustomerID = 80, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10294, CustomerID = 65, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10295, CustomerID = 85, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10296, CustomerID = 46, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10297, CustomerID = 7, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10298, CustomerID = 37, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10299, CustomerID = 67, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10300, CustomerID = 49, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10301, CustomerID = 86, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10302, CustomerID = 76, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10303, CustomerID = 30, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10304, CustomerID = 80, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10305, CustomerID = 55, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10306, CustomerID = 69, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10307, CustomerID = 48, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10308, CustomerID = 2, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10309, CustomerID = 37, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10310, CustomerID = 77, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10311, CustomerID = 18, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10312, CustomerID = 86, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10313, CustomerID = 63, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10314, CustomerID = 65, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10315, CustomerID = 38, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10316, CustomerID = 65, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10317, CustomerID = 48, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10318, CustomerID = 38, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10319, CustomerID = 80, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10320, CustomerID = 87, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10321, CustomerID = 38, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10322, CustomerID = 58, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10323, CustomerID = 39, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10324, CustomerID = 71, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10325, CustomerID = 39, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10326, CustomerID = 8, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10327, CustomerID = 24, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10328, CustomerID = 28, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10329, CustomerID = 75, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10330, CustomerID = 46, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10331, CustomerID = 9, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10332, CustomerID = 51, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10333, CustomerID = 87, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10334, CustomerID = 84, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10335, CustomerID = 37, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10336, CustomerID = 60, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10337, CustomerID = 25, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10338, CustomerID = 55, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10339, CustomerID = 51, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10340, CustomerID = 9, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10341, CustomerID = 73, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10342, CustomerID = 25, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10343, CustomerID = 44, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10344, CustomerID = 89, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10345, CustomerID = 63, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10346, CustomerID = 65, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10347, CustomerID = 21, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10348, CustomerID = 86, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10349, CustomerID = 75, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10350, CustomerID = 41, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10351, CustomerID = 20, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10352, CustomerID = 28, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10353, CustomerID = 59, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10354, CustomerID = 58, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10355, CustomerID = 4, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10356, CustomerID = 86, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10357, CustomerID = 46, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10358, CustomerID = 41, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10359, CustomerID = 72, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10360, CustomerID = 7, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10361, CustomerID = 63, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10362, CustomerID = 9, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10363, CustomerID = 17, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10364, CustomerID = 19, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10365, CustomerID = 3, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10366, CustomerID = 29, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10367, CustomerID = 83, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10368, CustomerID = 20, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10369, CustomerID = 75, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10370, CustomerID = 14, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10371, CustomerID = 41, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10372, CustomerID = 62, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10373, CustomerID = 37, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10374, CustomerID = 91, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10375, CustomerID = 36, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10376, CustomerID = 51, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10377, CustomerID = 72, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10378, CustomerID = 24, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10379, CustomerID = 61, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10380, CustomerID = 37, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10381, CustomerID = 46, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10382, CustomerID = 20, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10383, CustomerID = 4, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10384, CustomerID = 5, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10385, CustomerID = 75, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10386, CustomerID = 21, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10387, CustomerID = 70, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10388, CustomerID = 72, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10389, CustomerID = 10, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10390, CustomerID = 20, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10391, CustomerID = 17, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10392, CustomerID = 59, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10393, CustomerID = 71, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10394, CustomerID = 36, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10395, CustomerID = 35, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10396, CustomerID = 25, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10397, CustomerID = 60, EmployeeID = 5, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10398, CustomerID = 71, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10399, CustomerID = 83, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10400, CustomerID = 19, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10401, CustomerID = 65, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10402, CustomerID = 20, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10403, CustomerID = 20, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10404, CustomerID = 49, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10405, CustomerID = 47, EmployeeID = 1, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10406, CustomerID = 62, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10407, CustomerID = 56, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10408, CustomerID = 23, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10409, CustomerID = 54, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10410, CustomerID = 10, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10411, CustomerID = 10, EmployeeID = 9, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10412, CustomerID = 87, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10413, CustomerID = 41, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10414, CustomerID = 21, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10415, CustomerID = 36, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10416, CustomerID = 87, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10417, CustomerID = 73, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10418, CustomerID = 63, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10419, CustomerID = 68, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10420, CustomerID = 88, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10421, CustomerID = 61, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10422, CustomerID = 27, EmployeeID = 2, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10423, CustomerID = 31, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10424, CustomerID = 51, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10425, CustomerID = 41, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10426, CustomerID = 29, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10427, CustomerID = 59, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10428, CustomerID = 66, EmployeeID = 7, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10429, CustomerID = 37, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10430, CustomerID = 20, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10431, CustomerID = 10, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10432, CustomerID = 75, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10433, CustomerID = 60, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10434, CustomerID = 24, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10435, CustomerID = 16, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10436, CustomerID = 7, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10437, CustomerID = 87, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10438, CustomerID = 79, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10439, CustomerID = 51, EmployeeID = 6, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 3 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10440, CustomerID = 71, EmployeeID = 4, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10441, CustomerID = 55, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10442, CustomerID = 20, EmployeeID = 3, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 2 });
            modelBuilder.Entity<Order>().HasData(new Order { OrderID = 10443, CustomerID = 66, EmployeeID = 8, OrderDate = new DateTime(rand.Next(1999, 2011), rand.Next(1, 13), rand.Next(1, 29)), ShipperID = 1 });

            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 1, OrderID = 10248, ProductID = 11, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 2, OrderID = 10248, ProductID = 42, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 3, OrderID = 10248, ProductID = 72, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 4, OrderID = 10249, ProductID = 14, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 5, OrderID = 10249, ProductID = 51, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 6, OrderID = 10250, ProductID = 41, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 7, OrderID = 10250, ProductID = 51, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 8, OrderID = 10250, ProductID = 65, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 9, OrderID = 10251, ProductID = 22, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 10, OrderID = 10251, ProductID = 57, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 11, OrderID = 10251, ProductID = 65, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 12, OrderID = 10252, ProductID = 20, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 13, OrderID = 10252, ProductID = 33, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 14, OrderID = 10252, ProductID = 60, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 15, OrderID = 10253, ProductID = 31, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 16, OrderID = 10253, ProductID = 39, Quantity = 42 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 17, OrderID = 10253, ProductID = 49, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 18, OrderID = 10254, ProductID = 24, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 19, OrderID = 10254, ProductID = 55, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 20, OrderID = 10254, ProductID = 74, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 21, OrderID = 10255, ProductID = 2, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 22, OrderID = 10255, ProductID = 16, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 23, OrderID = 10255, ProductID = 36, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 24, OrderID = 10255, ProductID = 59, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 25, OrderID = 10256, ProductID = 53, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 26, OrderID = 10256, ProductID = 77, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 27, OrderID = 10257, ProductID = 27, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 28, OrderID = 10257, ProductID = 39, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 29, OrderID = 10257, ProductID = 77, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 30, OrderID = 10258, ProductID = 2, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 31, OrderID = 10258, ProductID = 5, Quantity = 65 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 32, OrderID = 10258, ProductID = 32, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 33, OrderID = 10259, ProductID = 21, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 34, OrderID = 10259, ProductID = 37, Quantity = 1 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 35, OrderID = 10260, ProductID = 41, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 36, OrderID = 10260, ProductID = 57, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 37, OrderID = 10260, ProductID = 62, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 38, OrderID = 10260, ProductID = 70, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 39, OrderID = 10261, ProductID = 21, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 40, OrderID = 10261, ProductID = 35, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 41, OrderID = 10262, ProductID = 5, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 42, OrderID = 10262, ProductID = 7, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 43, OrderID = 10262, ProductID = 56, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 44, OrderID = 10263, ProductID = 16, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 45, OrderID = 10263, ProductID = 24, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 46, OrderID = 10263, ProductID = 30, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 47, OrderID = 10263, ProductID = 74, Quantity = 36 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 48, OrderID = 10264, ProductID = 2, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 49, OrderID = 10264, ProductID = 41, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 50, OrderID = 10265, ProductID = 17, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 51, OrderID = 10265, ProductID = 70, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 52, OrderID = 10266, ProductID = 12, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 53, OrderID = 10267, ProductID = 40, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 54, OrderID = 10267, ProductID = 59, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 55, OrderID = 10267, ProductID = 76, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 56, OrderID = 10268, ProductID = 29, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 57, OrderID = 10268, ProductID = 72, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 58, OrderID = 10269, ProductID = 33, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 59, OrderID = 10269, ProductID = 72, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 60, OrderID = 10270, ProductID = 36, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 61, OrderID = 10270, ProductID = 43, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 62, OrderID = 10271, ProductID = 33, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 63, OrderID = 10272, ProductID = 20, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 64, OrderID = 10272, ProductID = 31, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 65, OrderID = 10272, ProductID = 72, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 66, OrderID = 10273, ProductID = 10, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 67, OrderID = 10273, ProductID = 31, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 68, OrderID = 10273, ProductID = 33, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 69, OrderID = 10273, ProductID = 40, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 70, OrderID = 10273, ProductID = 76, Quantity = 33 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 71, OrderID = 10274, ProductID = 71, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 72, OrderID = 10274, ProductID = 72, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 73, OrderID = 10275, ProductID = 24, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 74, OrderID = 10275, ProductID = 59, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 75, OrderID = 10276, ProductID = 10, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 76, OrderID = 10276, ProductID = 13, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 77, OrderID = 10277, ProductID = 28, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 78, OrderID = 10277, ProductID = 62, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 79, OrderID = 10278, ProductID = 44, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 80, OrderID = 10278, ProductID = 59, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 81, OrderID = 10278, ProductID = 63, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 82, OrderID = 10278, ProductID = 73, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 83, OrderID = 10279, ProductID = 17, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 84, OrderID = 10280, ProductID = 24, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 85, OrderID = 10280, ProductID = 55, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 86, OrderID = 10280, ProductID = 75, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 87, OrderID = 10281, ProductID = 19, Quantity = 1 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 88, OrderID = 10281, ProductID = 24, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 89, OrderID = 10281, ProductID = 35, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 90, OrderID = 10282, ProductID = 30, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 91, OrderID = 10282, ProductID = 57, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 92, OrderID = 10283, ProductID = 15, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 93, OrderID = 10283, ProductID = 19, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 94, OrderID = 10283, ProductID = 60, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 95, OrderID = 10283, ProductID = 72, Quantity = 3 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 96, OrderID = 10284, ProductID = 27, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 97, OrderID = 10284, ProductID = 44, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 98, OrderID = 10284, ProductID = 60, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 99, OrderID = 10284, ProductID = 67, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 100, OrderID = 10285, ProductID = 1, Quantity = 45 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 101, OrderID = 10285, ProductID = 40, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 102, OrderID = 10285, ProductID = 53, Quantity = 36 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 103, OrderID = 10286, ProductID = 35, Quantity = 100 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 104, OrderID = 10286, ProductID = 62, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 105, OrderID = 10287, ProductID = 16, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 106, OrderID = 10287, ProductID = 34, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 107, OrderID = 10287, ProductID = 46, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 108, OrderID = 10288, ProductID = 54, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 109, OrderID = 10288, ProductID = 68, Quantity = 3 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 110, OrderID = 10289, ProductID = 3, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 111, OrderID = 10289, ProductID = 64, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 112, OrderID = 10290, ProductID = 5, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 113, OrderID = 10290, ProductID = 29, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 114, OrderID = 10290, ProductID = 49, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 115, OrderID = 10290, ProductID = 77, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 116, OrderID = 10291, ProductID = 13, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 117, OrderID = 10291, ProductID = 44, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 118, OrderID = 10291, ProductID = 51, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 119, OrderID = 10292, ProductID = 20, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 120, OrderID = 10293, ProductID = 18, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 121, OrderID = 10293, ProductID = 24, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 122, OrderID = 10293, ProductID = 63, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 123, OrderID = 10293, ProductID = 75, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 124, OrderID = 10294, ProductID = 1, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 125, OrderID = 10294, ProductID = 17, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 126, OrderID = 10294, ProductID = 43, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 127, OrderID = 10294, ProductID = 60, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 128, OrderID = 10294, ProductID = 75, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 129, OrderID = 10295, ProductID = 56, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 130, OrderID = 10296, ProductID = 11, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 131, OrderID = 10296, ProductID = 16, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 132, OrderID = 10296, ProductID = 69, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 133, OrderID = 10297, ProductID = 39, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 134, OrderID = 10297, ProductID = 72, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 135, OrderID = 10298, ProductID = 2, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 136, OrderID = 10298, ProductID = 36, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 137, OrderID = 10298, ProductID = 59, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 138, OrderID = 10298, ProductID = 62, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 139, OrderID = 10299, ProductID = 19, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 140, OrderID = 10299, ProductID = 70, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 141, OrderID = 10300, ProductID = 66, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 142, OrderID = 10300, ProductID = 68, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 143, OrderID = 10301, ProductID = 40, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 144, OrderID = 10301, ProductID = 56, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 145, OrderID = 10302, ProductID = 17, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 146, OrderID = 10302, ProductID = 28, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 147, OrderID = 10302, ProductID = 43, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 148, OrderID = 10303, ProductID = 40, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 149, OrderID = 10303, ProductID = 65, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 150, OrderID = 10303, ProductID = 68, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 151, OrderID = 10304, ProductID = 49, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 152, OrderID = 10304, ProductID = 59, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 153, OrderID = 10304, ProductID = 71, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 154, OrderID = 10305, ProductID = 18, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 155, OrderID = 10305, ProductID = 29, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 156, OrderID = 10305, ProductID = 39, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 157, OrderID = 10306, ProductID = 30, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 158, OrderID = 10306, ProductID = 53, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 159, OrderID = 10306, ProductID = 54, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 160, OrderID = 10307, ProductID = 62, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 161, OrderID = 10307, ProductID = 68, Quantity = 3 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 162, OrderID = 10308, ProductID = 69, Quantity = 1 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 163, OrderID = 10308, ProductID = 70, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 164, OrderID = 10309, ProductID = 4, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 165, OrderID = 10309, ProductID = 6, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 166, OrderID = 10309, ProductID = 42, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 167, OrderID = 10309, ProductID = 43, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 168, OrderID = 10309, ProductID = 71, Quantity = 3 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 169, OrderID = 10310, ProductID = 16, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 170, OrderID = 10310, ProductID = 62, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 171, OrderID = 10311, ProductID = 42, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 172, OrderID = 10311, ProductID = 69, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 173, OrderID = 10312, ProductID = 28, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 174, OrderID = 10312, ProductID = 43, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 175, OrderID = 10312, ProductID = 53, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 176, OrderID = 10312, ProductID = 75, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 177, OrderID = 10313, ProductID = 36, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 178, OrderID = 10314, ProductID = 32, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 179, OrderID = 10314, ProductID = 58, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 180, OrderID = 10314, ProductID = 62, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 181, OrderID = 10315, ProductID = 34, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 182, OrderID = 10315, ProductID = 70, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 183, OrderID = 10316, ProductID = 41, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 184, OrderID = 10316, ProductID = 62, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 185, OrderID = 10317, ProductID = 1, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 186, OrderID = 10318, ProductID = 41, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 187, OrderID = 10318, ProductID = 76, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 188, OrderID = 10319, ProductID = 17, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 189, OrderID = 10319, ProductID = 28, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 190, OrderID = 10319, ProductID = 76, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 191, OrderID = 10320, ProductID = 71, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 192, OrderID = 10321, ProductID = 35, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 193, OrderID = 10322, ProductID = 52, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 194, OrderID = 10323, ProductID = 15, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 195, OrderID = 10323, ProductID = 25, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 196, OrderID = 10323, ProductID = 39, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 197, OrderID = 10324, ProductID = 16, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 198, OrderID = 10324, ProductID = 35, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 199, OrderID = 10324, ProductID = 46, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 200, OrderID = 10324, ProductID = 59, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 201, OrderID = 10324, ProductID = 63, Quantity = 80 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 202, OrderID = 10325, ProductID = 6, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 203, OrderID = 10325, ProductID = 13, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 204, OrderID = 10325, ProductID = 14, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 205, OrderID = 10325, ProductID = 31, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 206, OrderID = 10325, ProductID = 72, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 207, OrderID = 10326, ProductID = 4, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 208, OrderID = 10326, ProductID = 57, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 209, OrderID = 10326, ProductID = 75, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 210, OrderID = 10327, ProductID = 2, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 211, OrderID = 10327, ProductID = 11, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 212, OrderID = 10327, ProductID = 30, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 213, OrderID = 10327, ProductID = 58, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 214, OrderID = 10328, ProductID = 59, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 215, OrderID = 10328, ProductID = 65, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 216, OrderID = 10328, ProductID = 68, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 217, OrderID = 10329, ProductID = 19, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 218, OrderID = 10329, ProductID = 30, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 219, OrderID = 10329, ProductID = 38, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 220, OrderID = 10329, ProductID = 56, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 221, OrderID = 10330, ProductID = 26, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 222, OrderID = 10330, ProductID = 72, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 223, OrderID = 10331, ProductID = 54, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 224, OrderID = 10332, ProductID = 18, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 225, OrderID = 10332, ProductID = 42, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 226, OrderID = 10332, ProductID = 47, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 227, OrderID = 10333, ProductID = 14, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 228, OrderID = 10333, ProductID = 21, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 229, OrderID = 10333, ProductID = 71, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 230, OrderID = 10334, ProductID = 52, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 231, OrderID = 10334, ProductID = 68, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 232, OrderID = 10335, ProductID = 2, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 233, OrderID = 10335, ProductID = 31, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 234, OrderID = 10335, ProductID = 32, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 235, OrderID = 10335, ProductID = 51, Quantity = 48 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 236, OrderID = 10336, ProductID = 4, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 237, OrderID = 10337, ProductID = 23, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 238, OrderID = 10337, ProductID = 26, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 239, OrderID = 10337, ProductID = 36, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 240, OrderID = 10337, ProductID = 37, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 241, OrderID = 10337, ProductID = 72, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 242, OrderID = 10338, ProductID = 17, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 243, OrderID = 10338, ProductID = 30, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 244, OrderID = 10339, ProductID = 4, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 245, OrderID = 10339, ProductID = 17, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 246, OrderID = 10339, ProductID = 62, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 247, OrderID = 10340, ProductID = 18, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 248, OrderID = 10340, ProductID = 41, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 249, OrderID = 10340, ProductID = 43, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 250, OrderID = 10341, ProductID = 33, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 251, OrderID = 10341, ProductID = 59, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 252, OrderID = 10342, ProductID = 2, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 253, OrderID = 10342, ProductID = 31, Quantity = 56 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 254, OrderID = 10342, ProductID = 36, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 255, OrderID = 10342, ProductID = 55, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 256, OrderID = 10343, ProductID = 64, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 257, OrderID = 10343, ProductID = 68, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 258, OrderID = 10343, ProductID = 76, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 259, OrderID = 10344, ProductID = 4, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 260, OrderID = 10344, ProductID = 8, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 261, OrderID = 10345, ProductID = 8, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 262, OrderID = 10345, ProductID = 19, Quantity = 80 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 263, OrderID = 10345, ProductID = 42, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 264, OrderID = 10346, ProductID = 17, Quantity = 36 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 265, OrderID = 10346, ProductID = 56, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 266, OrderID = 10347, ProductID = 25, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 267, OrderID = 10347, ProductID = 39, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 268, OrderID = 10347, ProductID = 40, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 269, OrderID = 10347, ProductID = 75, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 270, OrderID = 10348, ProductID = 1, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 271, OrderID = 10348, ProductID = 23, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 272, OrderID = 10349, ProductID = 54, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 273, OrderID = 10350, ProductID = 50, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 274, OrderID = 10350, ProductID = 69, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 275, OrderID = 10351, ProductID = 38, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 276, OrderID = 10351, ProductID = 41, Quantity = 13 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 277, OrderID = 10351, ProductID = 44, Quantity = 77 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 278, OrderID = 10351, ProductID = 65, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 279, OrderID = 10352, ProductID = 24, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 280, OrderID = 10352, ProductID = 54, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 281, OrderID = 10353, ProductID = 11, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 282, OrderID = 10353, ProductID = 38, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 283, OrderID = 10354, ProductID = 1, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 284, OrderID = 10354, ProductID = 29, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 285, OrderID = 10355, ProductID = 24, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 286, OrderID = 10355, ProductID = 57, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 287, OrderID = 10356, ProductID = 31, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 288, OrderID = 10356, ProductID = 55, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 289, OrderID = 10356, ProductID = 69, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 290, OrderID = 10357, ProductID = 10, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 291, OrderID = 10357, ProductID = 26, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 292, OrderID = 10357, ProductID = 60, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 293, OrderID = 10358, ProductID = 24, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 294, OrderID = 10358, ProductID = 34, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 295, OrderID = 10358, ProductID = 36, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 296, OrderID = 10359, ProductID = 16, Quantity = 56 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 297, OrderID = 10359, ProductID = 31, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 298, OrderID = 10359, ProductID = 60, Quantity = 80 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 299, OrderID = 10360, ProductID = 28, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 300, OrderID = 10360, ProductID = 29, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 301, OrderID = 10360, ProductID = 38, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 302, OrderID = 10360, ProductID = 49, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 303, OrderID = 10360, ProductID = 54, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 304, OrderID = 10361, ProductID = 39, Quantity = 54 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 305, OrderID = 10361, ProductID = 60, Quantity = 55 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 306, OrderID = 10362, ProductID = 25, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 307, OrderID = 10362, ProductID = 51, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 308, OrderID = 10362, ProductID = 54, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 309, OrderID = 10363, ProductID = 31, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 310, OrderID = 10363, ProductID = 75, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 311, OrderID = 10363, ProductID = 76, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 312, OrderID = 10364, ProductID = 69, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 313, OrderID = 10364, ProductID = 71, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 314, OrderID = 10365, ProductID = 11, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 315, OrderID = 10366, ProductID = 65, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 316, OrderID = 10366, ProductID = 77, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 317, OrderID = 10367, ProductID = 34, Quantity = 36 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 318, OrderID = 10367, ProductID = 54, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 319, OrderID = 10367, ProductID = 65, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 320, OrderID = 10367, ProductID = 77, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 321, OrderID = 10368, ProductID = 21, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 322, OrderID = 10368, ProductID = 28, Quantity = 13 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 323, OrderID = 10368, ProductID = 57, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 324, OrderID = 10368, ProductID = 64, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 325, OrderID = 10369, ProductID = 29, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 326, OrderID = 10369, ProductID = 56, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 327, OrderID = 10370, ProductID = 1, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 328, OrderID = 10370, ProductID = 64, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 329, OrderID = 10370, ProductID = 74, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 330, OrderID = 10371, ProductID = 36, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 331, OrderID = 10372, ProductID = 20, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 332, OrderID = 10372, ProductID = 38, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 333, OrderID = 10372, ProductID = 60, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 334, OrderID = 10372, ProductID = 72, Quantity = 42 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 335, OrderID = 10373, ProductID = 58, Quantity = 80 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 336, OrderID = 10373, ProductID = 71, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 337, OrderID = 10374, ProductID = 31, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 338, OrderID = 10374, ProductID = 58, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 339, OrderID = 10375, ProductID = 14, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 340, OrderID = 10375, ProductID = 54, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 341, OrderID = 10376, ProductID = 31, Quantity = 42 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 342, OrderID = 10377, ProductID = 28, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 343, OrderID = 10377, ProductID = 39, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 344, OrderID = 10378, ProductID = 71, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 345, OrderID = 10379, ProductID = 41, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 346, OrderID = 10379, ProductID = 63, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 347, OrderID = 10379, ProductID = 65, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 348, OrderID = 10380, ProductID = 30, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 349, OrderID = 10380, ProductID = 53, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 350, OrderID = 10380, ProductID = 60, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 351, OrderID = 10380, ProductID = 70, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 352, OrderID = 10381, ProductID = 74, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 353, OrderID = 10382, ProductID = 5, Quantity = 32 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 354, OrderID = 10382, ProductID = 18, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 355, OrderID = 10382, ProductID = 29, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 356, OrderID = 10382, ProductID = 33, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 357, OrderID = 10382, ProductID = 74, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 358, OrderID = 10383, ProductID = 13, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 359, OrderID = 10383, ProductID = 50, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 360, OrderID = 10383, ProductID = 56, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 361, OrderID = 10384, ProductID = 20, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 362, OrderID = 10384, ProductID = 60, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 363, OrderID = 10385, ProductID = 7, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 364, OrderID = 10385, ProductID = 60, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 365, OrderID = 10385, ProductID = 68, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 366, OrderID = 10386, ProductID = 24, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 367, OrderID = 10386, ProductID = 34, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 368, OrderID = 10387, ProductID = 24, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 369, OrderID = 10387, ProductID = 28, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 370, OrderID = 10387, ProductID = 59, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 371, OrderID = 10387, ProductID = 71, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 372, OrderID = 10388, ProductID = 45, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 373, OrderID = 10388, ProductID = 52, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 374, OrderID = 10388, ProductID = 53, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 375, OrderID = 10389, ProductID = 10, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 376, OrderID = 10389, ProductID = 55, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 377, OrderID = 10389, ProductID = 62, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 378, OrderID = 10389, ProductID = 70, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 379, OrderID = 10390, ProductID = 31, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 380, OrderID = 10390, ProductID = 35, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 381, OrderID = 10390, ProductID = 46, Quantity = 45 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 382, OrderID = 10390, ProductID = 72, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 383, OrderID = 10391, ProductID = 13, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 384, OrderID = 10392, ProductID = 69, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 385, OrderID = 10393, ProductID = 2, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 386, OrderID = 10393, ProductID = 14, Quantity = 42 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 387, OrderID = 10393, ProductID = 25, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 388, OrderID = 10393, ProductID = 26, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 389, OrderID = 10393, ProductID = 31, Quantity = 32 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 390, OrderID = 10394, ProductID = 13, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 391, OrderID = 10394, ProductID = 62, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 392, OrderID = 10395, ProductID = 46, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 393, OrderID = 10395, ProductID = 53, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 394, OrderID = 10395, ProductID = 69, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 395, OrderID = 10396, ProductID = 23, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 396, OrderID = 10396, ProductID = 71, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 397, OrderID = 10396, ProductID = 72, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 398, OrderID = 10397, ProductID = 21, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 399, OrderID = 10397, ProductID = 51, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 400, OrderID = 10398, ProductID = 35, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 401, OrderID = 10398, ProductID = 55, Quantity = 120 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 402, OrderID = 10399, ProductID = 68, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 403, OrderID = 10399, ProductID = 71, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 404, OrderID = 10399, ProductID = 76, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 405, OrderID = 10399, ProductID = 77, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 406, OrderID = 10400, ProductID = 29, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 407, OrderID = 10400, ProductID = 35, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 408, OrderID = 10400, ProductID = 49, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 409, OrderID = 10401, ProductID = 30, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 410, OrderID = 10401, ProductID = 56, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 411, OrderID = 10401, ProductID = 65, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 412, OrderID = 10401, ProductID = 71, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 413, OrderID = 10402, ProductID = 23, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 414, OrderID = 10402, ProductID = 63, Quantity = 65 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 415, OrderID = 10403, ProductID = 16, Quantity = 21 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 416, OrderID = 10403, ProductID = 48, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 417, OrderID = 10404, ProductID = 26, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 418, OrderID = 10404, ProductID = 42, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 419, OrderID = 10404, ProductID = 49, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 420, OrderID = 10405, ProductID = 3, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 421, OrderID = 10406, ProductID = 1, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 422, OrderID = 10406, ProductID = 21, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 423, OrderID = 10406, ProductID = 28, Quantity = 42 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 424, OrderID = 10406, ProductID = 36, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 425, OrderID = 10406, ProductID = 40, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 426, OrderID = 10407, ProductID = 11, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 427, OrderID = 10407, ProductID = 69, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 428, OrderID = 10407, ProductID = 71, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 429, OrderID = 10408, ProductID = 37, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 430, OrderID = 10408, ProductID = 54, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 431, OrderID = 10408, ProductID = 62, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 432, OrderID = 10409, ProductID = 14, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 433, OrderID = 10409, ProductID = 21, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 434, OrderID = 10410, ProductID = 33, Quantity = 49 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 435, OrderID = 10410, ProductID = 59, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 436, OrderID = 10411, ProductID = 41, Quantity = 25 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 437, OrderID = 10411, ProductID = 44, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 438, OrderID = 10411, ProductID = 59, Quantity = 9 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 439, OrderID = 10412, ProductID = 14, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 440, OrderID = 10413, ProductID = 1, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 441, OrderID = 10413, ProductID = 62, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 442, OrderID = 10413, ProductID = 76, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 443, OrderID = 10414, ProductID = 19, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 444, OrderID = 10414, ProductID = 33, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 445, OrderID = 10415, ProductID = 17, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 446, OrderID = 10415, ProductID = 33, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 447, OrderID = 10416, ProductID = 19, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 448, OrderID = 10416, ProductID = 53, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 449, OrderID = 10416, ProductID = 57, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 450, OrderID = 10417, ProductID = 38, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 451, OrderID = 10417, ProductID = 46, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 452, OrderID = 10417, ProductID = 68, Quantity = 36 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 453, OrderID = 10417, ProductID = 77, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 454, OrderID = 10418, ProductID = 2, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 455, OrderID = 10418, ProductID = 47, Quantity = 55 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 456, OrderID = 10418, ProductID = 61, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 457, OrderID = 10418, ProductID = 74, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 458, OrderID = 10419, ProductID = 60, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 459, OrderID = 10419, ProductID = 69, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 460, OrderID = 10420, ProductID = 9, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 461, OrderID = 10420, ProductID = 13, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 462, OrderID = 10420, ProductID = 70, Quantity = 8 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 463, OrderID = 10420, ProductID = 73, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 464, OrderID = 10421, ProductID = 19, Quantity = 4 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 465, OrderID = 10421, ProductID = 26, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 466, OrderID = 10421, ProductID = 53, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 467, OrderID = 10421, ProductID = 77, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 468, OrderID = 10422, ProductID = 26, Quantity = 2 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 469, OrderID = 10423, ProductID = 31, Quantity = 14 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 470, OrderID = 10423, ProductID = 59, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 471, OrderID = 10424, ProductID = 35, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 472, OrderID = 10424, ProductID = 38, Quantity = 49 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 473, OrderID = 10424, ProductID = 68, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 474, OrderID = 10425, ProductID = 55, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 475, OrderID = 10425, ProductID = 76, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 476, OrderID = 10426, ProductID = 56, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 477, OrderID = 10426, ProductID = 64, Quantity = 7 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 478, OrderID = 10427, ProductID = 14, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 479, OrderID = 10428, ProductID = 46, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 480, OrderID = 10429, ProductID = 50, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 481, OrderID = 10429, ProductID = 63, Quantity = 35 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 482, OrderID = 10430, ProductID = 17, Quantity = 45 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 483, OrderID = 10430, ProductID = 21, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 484, OrderID = 10430, ProductID = 56, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 485, OrderID = 10430, ProductID = 59, Quantity = 70 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 486, OrderID = 10431, ProductID = 17, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 487, OrderID = 10431, ProductID = 40, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 488, OrderID = 10431, ProductID = 47, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 489, OrderID = 10432, ProductID = 26, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 490, OrderID = 10432, ProductID = 54, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 491, OrderID = 10433, ProductID = 56, Quantity = 28 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 492, OrderID = 10434, ProductID = 11, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 493, OrderID = 10434, ProductID = 76, Quantity = 18 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 494, OrderID = 10435, ProductID = 2, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 495, OrderID = 10435, ProductID = 22, Quantity = 12 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 496, OrderID = 10435, ProductID = 72, Quantity = 10 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 497, OrderID = 10436, ProductID = 46, Quantity = 5 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 498, OrderID = 10436, ProductID = 56, Quantity = 40 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 499, OrderID = 10436, ProductID = 64, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 500, OrderID = 10436, ProductID = 75, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 501, OrderID = 10437, ProductID = 53, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 502, OrderID = 10438, ProductID = 19, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 503, OrderID = 10438, ProductID = 34, Quantity = 20 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 504, OrderID = 10438, ProductID = 57, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 505, OrderID = 10439, ProductID = 12, Quantity = 15 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 506, OrderID = 10439, ProductID = 16, Quantity = 16 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 507, OrderID = 10439, ProductID = 64, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 508, OrderID = 10439, ProductID = 74, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 509, OrderID = 10440, ProductID = 2, Quantity = 45 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 510, OrderID = 10440, ProductID = 16, Quantity = 49 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 511, OrderID = 10440, ProductID = 29, Quantity = 24 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 512, OrderID = 10440, ProductID = 61, Quantity = 90 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 513, OrderID = 10441, ProductID = 27, Quantity = 50 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 514, OrderID = 10442, ProductID = 11, Quantity = 30 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 515, OrderID = 10442, ProductID = 54, Quantity = 80 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 516, OrderID = 10442, ProductID = 66, Quantity = 60 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 517, OrderID = 10443, ProductID = 11, Quantity = 6 });
            modelBuilder.Entity<OrderDetail>().HasData(new OrderDetail { OrderDetailID = 518, OrderID = 10443, ProductID = 28, Quantity = 12 });

        }
    }
}
